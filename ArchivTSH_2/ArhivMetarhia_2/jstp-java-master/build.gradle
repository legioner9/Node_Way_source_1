buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}

plugins {
    id "com.github.spotbugs" version "1.6.1" apply true
    id "com.github.dcendents.android-maven" version "2.0" apply false
    id "com.jfrog.bintray" version "1.7.3" apply false
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def mavenDependencies(pom, depsArr) {
    return pom.withXml {
        def root = asNode()
        def dependenciesNode = root.dependencies
        if (!dependenciesNode) dependenciesNode = root.appendNode('dependencies')
        depsArr.each {
            def (groupIdName, artifactIdName, ver) = it
            addDependencyNodeToPom(dependenciesNode, null, groupIdName, artifactIdName, ver)
        }
    }
}

static def addDependencyNodeToPom(dependenciesNode, scope, group, artifact, version) {
    def dependencyNode = dependenciesNode.appendNode('dependency')
    if (scope) dependencyNode.appendNode("scope", scope)
    dependencyNode.appendNode("groupId", group)
    dependencyNode.appendNode("artifactId", artifact)
    dependencyNode.appendNode("version", version)
}

def addAllProjectDependenciesToPom(pom, configurations) {
    pom.withXml {
        def root = asNode()
        def dependenciesNode = root.dependencies
        if (!dependenciesNode) dependenciesNode = root.appendNode('dependencies')
        configurations.implementation.allDependencies.each {
            // Ensure dependencies such as fileTree are not included.
            if (it.name != 'unspecified' && it.version != 'unspecified') {
                def dependencyNode = dependenciesNode.appendNode('dependency')
                dependencyNode.appendNode('groupId', it.group)
                dependencyNode.appendNode('artifactId', it.name)
                dependencyNode.appendNode('version', it.version)
            }
        }
    }
}
